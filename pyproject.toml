[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "aider-mcp-server"
version = "0.1.0"
description = "Aider MCP Server - Offload AI coding tasks to Aider"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "Aider Team"}
]
dependencies = [
    "aider-chat>=0.83.1",
    "boto3>=1.37.27",
    "fastapi>=0.110.0",  # Added for API endpoints
    "httpx>=0.27.0",     # Added for testing SSE
    "mcp>=1.6.0",
    "pydantic>=2.11.2",  # Explicit pydantic dependency
    "python-dotenv",
    "rich>=14.0.0",
    "sse-starlette>=2.0.0",  # Added for SSE specific functionality
    "starlette>=0.38.0",     # Added for SSE server
    "uvicorn[standard]>=0.30.0", # Added for running Starlette/SSE server
    "uvloop>=0.17.0",
    "hatch",
    "toml>=0.10.2",  # Added for reading pyproject.toml in compatibility tests
    "packaging>=21.3",  # Added for version parsing in compatibility checks
]

[project.scripts]
mcp-aider-server = "aider_mcp_server:main"
mcp-aider = "aider_mcp_server:main"

[project.optional-dependencies]
dev = [
    "isort",
    "mkdocs",
    "mypy>=1.15.0",
    "pre-commit",
    "pre-commit-hooks",
    "pytest>=7.0.0",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-json-report>=1.5.0",
    "pytest-mock",
    "ruff>=0.11.6",
    "pydantic>=2.11.2",  # Explicit pydantic dependency
]

test = [
    "pytest>=7.0.0",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-json-report>=1.5.0",
    "pytest-mock",
    "httpx>=0.27.0",  # Added for testing SSE endpoints
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
pythonpath = ["src"]
asyncio_default_fixture_loop_scope = "function"
markers = [
    "api: marks tests that require API keys",
    "integration: marks tests that perform integration testing",
]

[tool.hatch]
package-dir = {"" = "src"}

[tool.hatch.build.targets.wheel]
packages = ["src/aider_mcp_server"]

[tool.hatch.envs.dev]
dependencies = ["aider-mcp-server[dev]"]
features = ["dev"]

[tool.hatch.envs.dev.scripts]
# Format and lint commands
format = [
    "isort . --profile black",
    "ruff format .",
    "ruff check --fix .",
]
lint = "pre-commit run --all-files"
test = "pytest {args}"
all = [
    "format",
    "lint",
    "test",
]
# Pre-commit management
install-hooks = "pre-commit install --install-hooks"
update-hooks = "pre-commit autoupdate"

[tool.hatch.envs.test]
dependencies = ["aider-mcp-server[test]"]
features = ["test"]

[tool.ruff]
target-version = "py312"
line-length = 120

[tool.ruff.lint]
select = ["E", "F", "A", "B", "C", "Q", "S"]  # Removed "I" for isort
ignore = ["E501"]  # Ignore line length
# Ignore S101 (assert usage) in test files and exclude stubbed file from formatting
# Allow S108 (/tmp usage) in test files
per-file-ignores = {"tests/*" = ["S101"], "test_*.py" = ["S101", "S108"], "src/aider_mcp_server/stubs/sse_starlette.pyi" = ["E", "F", "I", "A", "B", "C", "Q", "S"]}

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
# Skip formatting long imports to avoid conflicts with isort
skip-magic-trailing-comma = false

[tool.isort]
profile = "black"
line_length = 120
skip = ["src/aider_mcp_server/stubs/sse_starlette.pyi"]

[tool.mypy]
python_version = "3.12"
packages = ["aider_mcp_server"]
package_root = ["src"]
namespace_packages = true
explicit_package_bases = true
plugins = ["pydantic.mypy"]
mypy_path = "src"
strict = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
check_untyped_defs = true
no_implicit_optional = true
strict_optional = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unreachable = true
disallow_untyped_decorators = false  # Allow untyped decorators by default
ignore_missing_imports = true  # Ignore missing imports by default

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "dotenv"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "mcp.server"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "mcp.server.stdio"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "mcp.types"
ignore_missing_imports = true

# External dependencies - ignore missing imports for all of these
[[tool.mypy.overrides]]
module = "aider.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "fastapi.*"
ignore_missing_imports = true
disallow_untyped_decorators = false

[[tool.mypy.overrides]]
module = "starlette.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "uvicorn.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "sse_starlette.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "mcp.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "dotenv"
ignore_missing_imports = true

# Internal modules with special configuration
[[tool.mypy.overrides]]
module = "aider_mcp_server.server"
disallow_untyped_calls = false
disallow_untyped_decorators = false

[[tool.mypy.overrides]]
module = "aider_mcp_server.app"
disallow_untyped_decorators = false

[[tool.mypy.overrides]]
module = "aider_mcp_server.multi_transport_server"
disallow_untyped_decorators = false
